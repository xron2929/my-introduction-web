 <input type="checkbox" data-type="checkboxContent"
이런식으로 data-attribute를 이용하는 이유는 data를 임의로 사용자가 묶기가 편하다.
그러나 checkbox1,checkbox2,checkbox3 이런식으로 각각의 체크박스 유형이 다르다면
data-attribute를 사용한다
-- >
코드 수정
그 전의 전에 위와 같은 방법을 사용하고 수정한 이후 깃허브에 제출했는데 지금 제출한 깃허브 코드의 경우에는 data-attribute가 아니라 class라는 공통 조상으로 묶어서 사용하는 편이 정확하다
이유는 checkbox1,checkbox2처럼 각각의 체크박스 유형이 다른 상황이 아니기 때문이다. 
결론은 클래스로 공통적인 것을 묶고 id만을 따로 두는데도 원치않는 상황이 발생하면 data-attribute를 사용하는 것이 맞다.
-- >
data-attribute에 대한 자세한 설명
예를 들어 text색을 빨간색을 주는 것은 textColorRed, text의 폰트를 맑음으로 하는것은 textFontClear,그리고 텍스트에 밑줄을 주어야하는 textDecorationUnderline
이 3개를 섞어서
빨간색,밑줄
맑음,밑줄
빨간색,맑음 밑줄
빨간색,맑음
맑음
이런식으로 줘야한다면 class="textColorRed textFontClear" 이렇게 해야되는데 이게 많아지면 많아질수록 네이밍이 너무 길어진다.. 
또한, 저기서 맑음이라는 폰트뿐만 아니라 aria라는 폰트의 클래스도 생긴다면 textFontClear, textColorRed,textDecorationUnderline,textFontAria 클래스로 공통의 조상이라는 점은 알기 쉽지만
인과관계가 따로없어서 보기쉽고 구분하기 편하려고 네이밍을 짰지만, 역설적으로 간결하지 않다는 문제점이 있다
그러나 data-attribute는 data-color data-font 요런느낌으로 간단하게 줄여서 짤 수 있다
class=text data-color=red 요렇게 하면 텍스트 타입의 빨간색을 잡기도 편하고, 검은색,주황색,노란색 이렇게 잡기도 편할 것이다.
또한 다른 타입의 경우라면, 
class=border data-color=red

.border[data-class='red']
{
   border-color:red;
}
이렇게 하면 훨씬 깔끔해 보일 것이다.

빨간색,밑줄 
밑줄
맑음
이런 경우에는 class="textDecorationtextDecorationUnderline",id="textColorRed" 도 좋고, data-attribute도 좋아보이지만 말이다.
